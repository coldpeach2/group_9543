openapi: 3.0.2
info:
    title: ""
    version: ""
paths:
    /accounts/profile/:
        get:
            operationId: retrieveProfileView
            description: ""
            parameters: []
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ProfileView"
                    description: ""
            tags:
                - accounts
    /accounts/logout/:
        get:
            operationId: listLogouts
            description: ""
            parameters: []
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                type: array
                                items: {}
                    description: ""
            tags:
                - accounts
    /accounts/subscribe/update/:
        get:
            operationId: retrieveUserSubscription
            description: ""
            parameters: []
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ActivateUserSubscription"
                    description: ""
            tags:
                - accounts
        put:
            operationId: updateUserSubscription
            description: ""
            parameters: []
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ActivateUserSubscription"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/ActivateUserSubscription"
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/ActivateUserSubscription"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ActivateUserSubscription"
                    description: ""
            tags:
                - accounts
        patch:
            operationId: partialUpdateUserSubscription
            description: ""
            parameters: []
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ActivateUserSubscription"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/ActivateUserSubscription"
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/ActivateUserSubscription"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ActivateUserSubscription"
                    description: ""
            tags:
                - accounts
        delete:
            operationId: destroyUserSubscription
            description: ""
            parameters: []
            responses:
                "204":
                    description: ""
            tags:
                - accounts
    /accounts/profile/history/:
        get:
            operationId: listPaymentHistorys
            description: ""
            parameters: []
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/PaymentHistory"
                    description: ""
            tags:
                - accounts
    /studios/all/:
        get:
            operationId: listStudiosForUsers
            description: ""
            parameters: []
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/StudiosForUser"
                    description: ""
            tags:
                - studios
    /studios/{id}/classes/:
        get:
            operationId: listClassSchedules
            description: ""
            parameters:
                - name: id
                  in: path
                  required: true
                  description: ""
                  schema:
                      type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/ClassSchedule"
                    description: ""
            tags:
                - studios
    /studios/studio/search/:
        get:
            operationId: listStudios
            description:
                "As a user, I want to search/filter through the listed studios
                (mentioned earlier). Search/filter includes

                stdio name, amenities, class names, and coaches that hold classes in those
                studios."
            parameters:
                - name: search
                  required: false
                  in: query
                  description: A search term.
                  schema:
                      type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/StudioSearch"
                    description: ""
            tags:
                - studios
        post:
            operationId: createStudio
            description:
                "As a user, I want to search/filter through the listed studios
                (mentioned earlier). Search/filter includes

                stdio name, amenities, class names, and coaches that hold classes in those
                studios."
            parameters: []
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/StudioSearch"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/StudioSearch"
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/StudioSearch"
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StudioSearch"
                    description: ""
            tags:
                - studios
    /studios/classes/search/:
        get:
            operationId: listClasses
            description:
                "As a user, I want to search/filter a studio's class schedule.

                The search/filter can be based on the class name, coach name, date, and time
                range."
            parameters:
                - name: search
                  required: false
                  in: query
                  description: A search term.
                  schema:
                      type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/ClassSearch"
                    description: ""
            tags:
                - studios
        post:
            operationId: createClasses
            description:
                "As a user, I want to search/filter a studio's class schedule.

                The search/filter can be based on the class name, coach name, date, and time
                range."
            parameters: []
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ClassSearch"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/ClassSearch"
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/ClassSearch"
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ClassSearch"
                    description: ""
            tags:
                - studios
    /studios/{studio_id}/{class_id}/enrol/:
        get:
            operationId: listClassEnrols
            description: ""
            parameters:
                - name: studio_id
                  in: path
                  required: true
                  description: ""
                  schema:
                      type: string
                - name: class_id
                  in: path
                  required: true
                  description: ""
                  schema:
                      type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/ClassEnrol"
                    description: ""
            tags:
                - studios
        patch:
            operationId: partialUpdateClassEnrol
            description: ""
            parameters:
                - name: studio_id
                  in: path
                  required: true
                  description: ""
                  schema:
                      type: string
                - name: class_id
                  in: path
                  required: true
                  description: ""
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ClassEnrol"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/ClassEnrol"
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/ClassEnrol"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ClassEnrol"
                    description: ""
            tags:
                - studios
    /studios/my_schedule/:
        get:
            operationId: listClassSchedules
            description: ""
            parameters: []
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/ClassSchedule"
                    description: ""
            tags:
                - studios
    /accounts/register/:
        post:
            operationId: createUser
            description: ""
            parameters: []
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Registration"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/Registration"
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/Registration"
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Registration"
                    description: ""
            tags:
                - accounts
    /accounts/login/:
        post:
            operationId: createLogin
            description: ""
            parameters: []
            requestBody:
                content:
                    application/json:
                        schema: {}
                    application/x-www-form-urlencoded:
                        schema: {}
                    multipart/form-data:
                        schema: {}
            responses:
                "201":
                    content:
                        application/json:
                            schema: {}
                    description: ""
            tags:
                - accounts
    /accounts/subscribe/:
        post:
            operationId: createActivateUserSubscription
            description: ""
            parameters: []
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ActivateUserSubscription"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/ActivateUserSubscription"
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/ActivateUserSubscription"
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ActivateUserSubscription"
                    description: ""
            tags:
                - accounts
    /accounts/profile/update/:
        put:
            operationId: updateUser
            description: ""
            parameters: []
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ProfileUpdate"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/ProfileUpdate"
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/ProfileUpdate"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ProfileUpdate"
                    description: ""
            tags:
                - accounts
        patch:
            operationId: partialUpdateUser
            description: ""
            parameters: []
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ProfileUpdate"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/ProfileUpdate"
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/ProfileUpdate"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ProfileUpdate"
                    description: ""
            tags:
                - accounts
components:
    schemas:
        ProfileView:
            type: object
            properties:
                first_name:
                    type: string
                    nullable: true
                    maxLength: 120
                last_name:
                    type: string
                    nullable: true
                    maxLength: 120
                email:
                    type: string
                    format: email
                    maxLength: 120
                avatar:
                    type: string
                    format: binary
                    nullable: true
                phone_num:
                    type: integer
                    nullable: true
            required:
                - email
        ActivateUserSubscription:
            type: object
            properties:
                subscription_plan:
                    type: object
                    properties:
                        id:
                            type: integer
                            readOnly: true
                        subscription_choices:
                            enum:
                                - 14.99/month
                                - 149.99/year
                                - Free
                            type: string
                card_info:
                    type: integer
                    nullable: true
            required:
                - subscription_plan
        PaymentHistory:
            type: object
            properties:
                id:
                    type: integer
                    readOnly: true
                payment_date:
                    type: string
                    format: date-time
                    readOnly: true
                amount:
                    type: string
                    format: decimal
                    multipleOf: 0.01
                    maximum: 100000000
                    minimum: -100000000
                next_payment:
                    type: string
                    nullable: true
                    maxLength: 120
                user:
                    type: integer
            required:
                - user
        StudiosForUser:
            type: object
            properties:
                name:
                    type: string
                    maxLength: 120
                address:
                    type: string
                    maxLength: 120
                postal_code:
                    type: string
                    pattern: ^[A-Z]\d[A-Z]\s?\d[A-Z]\d$
                    maxLength: 7
                phone_num:
                    type: string
                    pattern: ^(\+\d{1,2}\s)?\(?\d{3}\)?[\s.-]?\d{3}[\s.-]?\d{4}$
                    maxLength: 15
                images:
                    type: string
                    format: binary
                    nullable: true
                lon:
                    type: number
                    nullable: true
                lat:
                    type: number
                    nullable: true
            required:
                - name
                - address
                - postal_code
                - phone_num
        ClassSchedule:
            type: object
            properties:
                id:
                    type: integer
                    readOnly: true
                name:
                    type: string
                    maxLength: 120
                description:
                    type: string
                    maxLength: 120
                coach:
                    type: string
                    maxLength: 120
                keywords:
                    type: string
                    maxLength: 120
                capacity:
                    type: integer
                start_time:
                    type: string
                    nullable: true
                    maxLength: 120
                end_time:
                    type: string
                    nullable: true
                    maxLength: 120
            required:
                - name
                - description
                - coach
                - keywords
                - capacity
        StudioSearch:
            type: object
            properties:
                name:
                    type: string
                    maxLength: 120
                address:
                    type: string
                    maxLength: 120
                lon:
                    type: number
                    nullable: true
                lat:
                    type: number
                    nullable: true
                postal_code:
                    type: string
                    pattern: ^[A-Z]\d[A-Z]\s?\d[A-Z]\d$
                    maxLength: 7
                phone_num:
                    type: string
                    pattern: ^(\+\d{1,2}\s)?\(?\d{3}\)?[\s.-]?\d{3}[\s.-]?\d{4}$
                    maxLength: 15
                images:
                    type: string
                    format: binary
                    nullable: true
            required:
                - name
                - address
                - postal_code
                - phone_num
        ClassSearch:
            type: object
            properties:
                id:
                    type: integer
                    readOnly: true
                name:
                    type: string
                    maxLength: 120
                description:
                    type: string
                    maxLength: 120
                coach:
                    type: string
                    maxLength: 120
                keywords:
                    type: string
                    maxLength: 120
                capacity:
                    type: integer
                frequency:
                    enum:
                        - 1
                        - 2
                        - 0
                        - 3
                    type: integer
                    nullable: true
                start_date:
                    type: string
                    format: date
                    nullable: true
                start_time:
                    type: string
                    nullable: true
                    maxLength: 120
                end_time:
                    type: string
                    nullable: true
                    maxLength: 120
                cancelled_date:
                    type: string
                    format: date-time
                    nullable: true
                studio:
                    type: array
                    items:
                        type: string
                enrolled:
                    type: array
                    items:
                        type: integer
            required:
                - name
                - description
                - coach
                - keywords
                - capacity
                - studio
        ClassEnrol:
            type: object
            properties:
                name:
                    type: string
                    maxLength: 120
                start_time:
                    type: string
                    nullable: true
                    maxLength: 120
            required:
                - name
        Registration:
            type: object
            properties:
                first_name:
                    type: string
                    nullable: true
                    maxLength: 120
                last_name:
                    type: string
                    nullable: true
                    maxLength: 120
                email:
                    type: string
                    format: email
                    maxLength: 120
                avatar:
                    type: string
                    format: binary
                    nullable: true
                phone_num:
                    type: integer
                    nullable: true
                password:
                    type: string
                    writeOnly: true
                    maxLength: 120
                password2:
                    type: string
                    writeOnly: true
            required:
                - email
                - password
                - password2
        ProfileUpdate:
            type: object
            properties:
                first_name:
                    type: string
                    nullable: true
                    maxLength: 120
                last_name:
                    type: string
                    nullable: true
                    maxLength: 120
                email:
                    type: string
                    format: email
                    maxLength: 120
                avatar:
                    type: string
                    format: binary
                    nullable: true
                phone_num:
                    type: integer
                    nullable: true
            required:
                - email
